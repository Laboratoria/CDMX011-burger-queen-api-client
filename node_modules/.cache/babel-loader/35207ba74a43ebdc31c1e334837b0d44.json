{"ast":null,"code":"var _jsxFileName = \"/home/anita/CDMX011-burger-queen-api-client/burguerqueen/src/components/Comanda.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Card, TableContainer, Table, TableHead, TableFooter, TableBody, TableRow, TableCell, TextField } from \"@mui/material\";\nimport CardContent from \"@mui/material/CardContent\";\nimport { Button } from \"@mui/material\";\nimport TablePagination from '@mui/material/TablePagination';\nimport Paper from '@mui/material/Paper';\nimport IconButton from '@mui/material/IconButton';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport LastPageIcon from '@mui/icons-material/LastPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comanda = ({\n  content,\n  cuenta\n}) => {\n  _s();\n\n  const theme = useTheme();\n  const {\n    count,\n    page,\n    rowsPerPage,\n    onPageChange\n  } = props;\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      id: \"Comanda\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"cliente\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Cliente:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          size: \"small\",\n          variant: \"filled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            stickyHeader: true,\n            \"aria-label\": \"sticky table\",\n            children: [/*#__PURE__*/_jsxDEV(TablePagination, {\n              rowsPerPageOptions: [10, 50]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  children: \"Producto\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Precio\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: content.map((item, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  value: item.product,\n                  margin: \"normal\",\n                  children: item.product\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  value: item.price,\n                  children: \"$\" + item.precio\n                }, item.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 13\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n              rowsPerPageOptions: [5, 10, 25, {\n                label: 'All',\n                value: -1\n              }],\n              colSpan: 3,\n              count: rows.length,\n              rowsPerPage: rowsPerPage,\n              page: page,\n              SelectProps: {\n                inputProps: {\n                  'aria-label': 'rows per page'\n                },\n                native: true\n              },\n              onPageChange: handleChangePage,\n              onRowsPerPageChange: handleChangeRowsPerPage,\n              ActionsComponent: TablePaginationActions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"Cuenta\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          align: \"right\",\n          margin: \"normal\",\n          children: \"Total: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          align: \"right\",\n          margin: \"normal\",\n          children: [\"$ \", cuenta]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comanda, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", true);\n\n_c = Comanda;\nexport default Comanda;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comanda\");","map":{"version":3,"sources":["/home/anita/CDMX011-burger-queen-api-client/burguerqueen/src/components/Comanda.jsx"],"names":["React","useState","Card","TableContainer","Table","TableHead","TableFooter","TableBody","TableRow","TableCell","TextField","CardContent","Button","TablePagination","Paper","IconButton","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","LastPageIcon","Comanda","content","cuenta","theme","useTheme","count","page","rowsPerPage","onPageChange","props","emptyRows","Math","max","rows","length","handleChangePage","event","newPage","setPage","handleChangeRowsPerPage","setRowsPerPage","parseInt","target","value","handleFirstPageButtonClick","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","ceil","map","item","index","product","price","precio","id","label","inputProps","native","TablePaginationActions"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Card, TableContainer, Table, TableHead, TableFooter, TableBody, TableRow, TableCell, TextField} from \"@mui/material\";\nimport CardContent from \"@mui/material/CardContent\";\nimport { Button } from \"@mui/material\";\nimport TablePagination from '@mui/material/TablePagination';\nimport Paper from '@mui/material/Paper';\nimport IconButton from '@mui/material/IconButton';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport LastPageIcon from '@mui/icons-material/LastPage';\n\n\nconst Comanda = ({ content, cuenta }) => {\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onPageChange } = props;\n  const emptyRows =\n  page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\nconst handleChangePage = (event, newPage) => {\n  setPage(newPage);\n};\n\nconst handleChangeRowsPerPage = (event) => {\n  setRowsPerPage(parseInt(event.target.value, 10));\n  setPage(0);\n};\n\n  const handleFirstPageButtonClick = (event) => {\n    onPageChange(event, 0);\n  };\n  const handleBackButtonClick = (event) => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (event) => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n  return (\n    <div>\n      <Card id=\"Comanda\">\n        <section id='cliente'><h2>Cliente:</h2><TextField size='small' variant=\"filled\"></TextField></section>\n       \n       <CardContent>\n      <TableContainer>\n        <Table stickyHeader aria-label=\"sticky table\">\n        <TablePagination rowsPerPageOptions={[10, 50]} />\n          <TableHead>\n            <TableRow>\n              <TableCell align='left'>Producto</TableCell>\n              <TableCell align='center'>Precio</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          {content.map((item, index) => (\n            <TableRow >\n              <TableCell  align='left' key={index} value={item.product} margin=\"normal\">{item.product}</TableCell>\n              <TableCell  align='center' key={item.id} value={item.price}>{\"$\" + item.precio}</TableCell>\n            </TableRow>\n              \n        \n          ))}\n              </TableBody>\n              <TablePagination\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n              colSpan={3}\n              count={rows.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              SelectProps={{\n                inputProps: {\n                  'aria-label': 'rows per page',\n                },\n                native: true,\n              }}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n              ActionsComponent={TablePaginationActions}\n            />\n        </Table>\n       </TableContainer>  \n          \n         \n        </CardContent><section  id='Cuenta'>\n              <h2  align=\"right\" margin=\"normal\">Total: </h2>\n              <h2  align=\"right\" margin=\"normal\">$ {cuenta}</h2>\n            </section>\n      </Card>\n    </div>\n  );\n};\n\nexport default Comanda;\n"]},"metadata":{},"sourceType":"module"}